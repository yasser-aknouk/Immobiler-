<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAMCAgICAgMCAgIDAwMDBAYEBAQEBAgGBgUGCQgKCgkICQkK
        DA8MCgsOCwkJDRENDg8QEBEQCgwSExIQEw8QEBD/2wBDAQMDAwQDBAgEBAgQCwkLEBAQEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBD/wAARCAAgACADASIAAhEBAxEB/8QA
        GAAAAwEBAAAAAAAAAAAAAAAABggJBQT/xAAoEAABAwQCAgEDBQAAAAAAAAABAgQFAwYHEQghABIiFDFB
        EzJRgcL/xAAYAQACAwAAAAAAAAAAAAAAAAAABgEEB//EACMRAAEEAQQBBQAAAAAAAAAAAAECAwQRIQAF
        EkEGEzFRsfD/2gAMAwEAAhEDEQA/AA7lhytzdK5rue37dvuVgIWAkKsa0aRtc0ARSPqpa1J7UpRBP30B
        rrwAua+OXdmQMHc903vkCMi7lbl1FOnEhXShzTB1tJ31+CAdEpUlQ6UCebMLqtEcirxnm7Vo5qMLtduU
        UXdBNahUUhwVBNSmr4rQdaKT0RseU+xVfmL+deD3sLd9p/prb+jSXYFBCWbr1JRWa1tddbKSPkntKgQf
        ktIW5KkOtB0hQJoWawf33rXHWIuz7ZDmOQ0raUlPNVAkWBnIzZPZrrFjUyrYvjl3ecDOXPa175Ak4u2q
        AcyrpvIV1IbUydbUd9/kkDZCUqUekkg+4ocqs3xmbbWt+fv2WnoaekaUa8ZyVc1xqqfULQVdpUkkHo/b
        fj75VvzF/BTB7KFtC0/1FuPdpEMAglLx16grrOq2u+tFRPyV0lIAHxmJhl1WmOR1mzzhq0bVX92tHK6L
        SgmjQpqW4CimnTT0hA3oJHQGh4KU5FkNNF0lRIsXjJ/fehpiLvG2TJjcNKGkpVwVQCjQOcDFEdGus0db
        GUY6Lc55vBU6t0iNVdj0PFtEJVXTQ+pV7mmFEJK/XetnW9b8oFc3JDA/G7BcGwwiiPlKsizK4OOor2So
        9LcvT+9JCwfYK0tSgUjQBKVK5F8e832vmS6ZCHxxI3JAzslWlGL2Obqreqap9lU1hHaSFE/cf3+ADNMV
        ZWXr6zC14o/n1iHB/wA+UXFz4T7xZaJ5E0aJrPWmaGx4x5Dtu3onzko9JCeTZWEhRCQKVZFUR7/Fju9P
        dbPJHBHJHBc4wzciPi6sczC5yOrL0QodIcsj+9RKyPUJ2tKiEnYIKkAxTHRbbPtnKglulxqbsZhmt2hK
        a5ofUj0NQJJSF+ut6Ot715pPMVZVRv6PC94r/j2iHA/z4ccdeP2cLmzNashK44krcgoKToyj57It1Udp
        pH2TTSF9qJUB9h/f4MtrnzX2S80RxIs1V570S2PGPHtt3BECclfqoVxbCwoJJSRSaJuyff4odWf/2Q==
</value>
  </data>
</root>